name: Terraform Plan
on:
  pull_request_target:

concurrency:
  group: terraform

jobs:
  run:
    name: Run
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.0.1
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          # https://github.com/actions/checkout/issues/518
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Run terraform init
        run: terraform init

      - name: Run terraform plan
        id: plan
        run: terraform plan -no-color 2>&1 | tee plan.txt
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Generate message
        if: ${{ always() && !cancelled() }}
        uses: actions/github-script@v4.0.2
        id: message
        env:
          plan_outcome: ${{ steps.plan.outcome }}
        with:
          result-encoding: string
          script: |
            const fs = require('fs')

            // https://stackoverflow.com/a/30970751/4747401
            function escapeHTML(s) {
                const lookup = {
                    '&': "&amp;",
                    '"': "&quot;",
                    '<': "&lt;",
                    '>': "&gt;",
                }
                return s.replace(/[&"<>]/g, (c) => lookup[c])
            }

            const outcome = escapeHTML(process.env.plan_outcome)
            const output = escapeHTML(fs.readFileSync("plan.txt", "utf8"))

            return `<details><summary>terraform plan: ${outcome}</summary><pre>${output}</pre></details>`

      - name: Create comment
        if: ${{ always() && !cancelled() }}
        uses: marocchino/sticky-pull-request-comment@v2.1.0
        with:
          recreate: true
          message: ${{ steps.message.outputs.result }}
